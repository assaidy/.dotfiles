((adoc-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/adoc-mode.html" :description "a major-mode for editing AsciiDoc files" :recipe (:package "adoc-mode" :repo ("https://github.com/bbatsov/adoc-mode" . "adoc-mode") :files ("*" (:exclude ".git")))) (afternoon-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/afternoon-theme.html" :description "Dark color theme with a deep blue background" :recipe (:package "afternoon-theme" :repo ("https://github.com/ozanmakes/emacs-afternoon-theme" . "afternoon-theme") :files ("*" (:exclude ".git" "*.png")))) (aidermacs :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/aidermacs.html" :description "AI pair programming with Aider" :recipe (:package "aidermacs" :repo ("https://github.com/MatthewZMD/aidermacs" . "aidermacs") :files ("*" (:exclude ".git")))) (alect-themes :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/alect-themes.html" :description "Configurable light, dark and black themes for Emacs 24 or later" :recipe (:package "alect-themes" :repo ("https://github.com/alezost/alect-themes" . "alect-themes") :files ("*" (:exclude ".git" "LICENSE" "tests" "Makefile" "colors")))) (ample-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/ample-theme.html" :description "Calm Dark Theme for Emacs" :recipe (:package "ample-theme" :repo ("https://github.com/jordonbiondo/ample-theme" . "ample-theme") :files ("*" (:exclude ".git")))) (annotate :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/annotate.html" :description "annotate files without changing them" :recipe (:package "annotate" :repo ("https://github.com/bastibe/annotate.el" . "annotate") :files ("*" (:exclude ".git")))) (anti-zenburn-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/anti-zenburn-theme.html" :description "Low-contrast Zenburn-inverted theme" :recipe (:package "anti-zenburn-theme" :repo ("https://github.com/m00natic/anti-zenburn-theme" . "anti-zenburn-theme") :files ("*" (:exclude ".git" "anti-zenburn-snapshot.jpeg")))) (anzu :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/anzu.html" :description "Show number of matches in mode-line while searching" :recipe (:package "anzu" :repo ("https://github.com/emacsorphanage/anzu.git" . "anzu") :files ("*" (:exclude ".git" ".github" "image" "Cask" "Makefile")))) (apache-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/apache-mode.html" :description "Major mode for editing Apache httpd configuration files" :recipe (:package "apache-mode" :repo ("https://github.com/emacs-php/apache-mode" . "apache-mode") :files ("*" (:exclude ".git" "LICENSE")))) (apropospriate-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/apropospriate-theme.html" :description "A light & dark theme set for Emacs." :recipe (:package "apropospriate-theme" :repo ("https://github.com/waymondo/apropospriate-theme" . "apropospriate-theme") :files ("*" (:exclude ".git" "*.png")))) (arduino-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/arduino-mode.html" :description "Major mode for editing Arduino code" :recipe (:package "arduino-mode" :repo ("https://repo.or.cz/arduino-mode.git" . "arduino-mode") :files ("*" (:exclude ".git" "Cask")))) (auto-dim-other-buffers :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/auto-dim-other-buffers.html" :description "Makes windows without focus less prominent" :recipe (:package "auto-dim-other-buffers" :repo ("https://github.com/mina86/auto-dim-other-buffers.el" . "auto-dim-other-buffers") :files ("*" (:exclude ".git" "LICENSE" "screenshot.gif")))) (autothemer :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/autothemer.html" :description "Conveniently define themes" :recipe (:package "autothemer" :repo ("https://github.com/jasonm23/autothemer.git" . "autothemer") :files ("*" (:exclude ".git")))) (base32 :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/base32.html" :description "Base32 support" :recipe (:package "base32" :repo ("https://gitlab.com/fledermaus/totp.el" . "base32") :files ("*" (:exclude ".git" "totp-auth*.el" "Makefile" "*.md" "*.html" "tests" "README")))) (bash-completion :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/bash-completion.html" :description "Bash completion for the shell buffer" :recipe (:package "bash-completion" :repo ("https://github.com/szermatt/emacs-bash-completion" . "bash-completion") :files ("*" (:exclude ".git")))) (beancount :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/beancount.html" :description "A major mode to edit Beancount input files." :recipe (:package "beancount" :repo ("https://github.com/beancount/beancount-mode" . "beancount") :files ("*" (:exclude ".git")))) (better-jumper :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/better-jumper.html" :description "configurable jump list" :recipe (:package "better-jumper" :repo ("https://github.com/gilbertw1/better-jumper.git" . "better-jumper") :files ("*" (:exclude ".git" "LICENSE")))) (bind-map :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/bind-map.html" :description "Bind personal keymaps in multiple locations" :recipe (:package "bind-map" :repo ("https://github.com/justbur/emacs-bind-map.git" . "bind-map") :files ("*" (:exclude ".git" ".travis.yml" "Cask" "LICENSE")))) (bison-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/bison-mode.html" :description "Major mode for editing bison, yacc and lex files." :recipe (:package "bison-mode" :repo ("https://github.com/Wilfred/bison-mode" . "bison-mode") :files ("*" (:exclude ".git")))) (blow :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/blow.html" :description "Blow away mode lighters" :recipe (:package "blow" :repo ("https://codeberg.org/akib/emacs-blow" . "blow") :files ("*" (:exclude ".git")))) (blueprint-ts-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/blueprint-ts-mode.html" :description "tree-sitter support for Blueprint files" :recipe (:package "blueprint-ts-mode" :repo ("https://github.com/huanie/blueprint-ts-mode.git" . "blueprint-ts-mode") :files ("*" (:exclude ".git" "LICENSE")))) (boxquote :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/boxquote.html" :description "Quote text with a semi-box." :recipe (:package "boxquote" :repo ("https://github.com/davep/boxquote.el.git" . "boxquote") :files ("*" (:exclude ".git" "COPYING")))) (buttercup :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/buttercup.html" :description "Behavior-Driven Emacs Lisp Testing" :recipe (:package "buttercup" :repo ("https://github.com/jorgenschaefer/emacs-buttercup" . "buttercup") :files ("*" (:exclude ".git" "LICENSE")))) (camera :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/camera.html" :description "Take picture with your camera" :recipe (:package "camera" :repo ("https://codeberg.org/akib/emacs-camera" . "camera") :files ("*" (:exclude ".git")))) (caml :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/caml.html" :description "Caml mode for GNU Emacs" :recipe (:package "caml" :repo ("https://github.com/ocaml/caml-mode" . "caml") :files ("*" (:exclude ".git" "COPYING")))) (cdlatex :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/cdlatex.html" :description "Fast input methods for LaTeX environments and math" :recipe (:package "cdlatex" :repo ("https://github.com/cdominik/cdlatex" . "cdlatex") :files ("*" (:exclude ".git")))) (cider :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/cider.html" :description "Clojure Interactive Development Environment that Rocks" :recipe (:package "cider" :repo ("https://github.com/clojure-emacs/cider" . "cider") :files ("*" (:exclude ".git" "LICENSE" "doc" "logo" "refcard" "test")))) (clojure-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/clojure-mode.html" :description "Major mode for Clojure code" :recipe (:package "clojure-mode" :repo ("https://github.com/clojure-emacs/clojure-mode" . "clojure-mode") :files ("*" (:exclude ".git" "clojure-mode-extra-font-locking.el" "doc" "test" "test.clj")))) (clojure-ts-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/clojure-ts-mode.html" :description "Major mode for Clojure code" :recipe (:package "clojure-ts-mode" :repo ("https://github.com/clojure-emacs/clojure-ts-mode" . "clojure-ts-mode") :files ("*" (:exclude ".git")))) (coffee-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/coffee-mode.html" :description "Major mode for CoffeeScript code" :recipe (:package "coffee-mode" :repo ("https://github.com/defunkt/coffee-mode" . "coffee-mode") :files ("*" (:exclude ".git")))) (consult-flycheck :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/consult-flycheck.html" :description "Provides the command `consult-flycheck'" :recipe (:package "consult-flycheck" :repo ("https://github.com/minad/consult-flycheck" . "consult-flycheck") :files ("*" (:exclude ".git")))) (corfu-terminal :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/corfu-terminal.html" :description "Corfu popup on terminal" :recipe (:package "corfu-terminal" :repo ("https://codeberg.org/akib/emacs-corfu-terminal" . "corfu-terminal") :files ("*" (:exclude ".git")))) (crux :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/crux.html" :description "A Collection of Ridiculously Useful eXtensions" :recipe (:package "crux" :repo ("https://github.com/bbatsov/crux" . "crux") :files ("*" (:exclude ".git")))) (csv2ledger :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/csv2ledger.html" :description "Convert csv files to ledger entries" :recipe (:package "csv2ledger" :repo ("https://codeberg.org/joostkremers/csv2ledger" . "csv2ledger") :files ("*" (:exclude ".git")))) (cyberpunk-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/cyberpunk-theme.html" :description "Cyberpunk Color Theme" :recipe (:package "cyberpunk-theme" :repo ("https://github.com/n3mo/cyberpunk-theme.el" . "cyberpunk-theme") :files ("*" (:exclude ".git" "cyberpunk-theme.png" "example-org-file.org")))) (cycle-at-point :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/cycle-at-point.html" :description "Cycle (rotate) the thing under the cursor" :recipe (:package "cycle-at-point" :repo ("https://codeberg.org/ideasman42/emacs-cycle-at-point" . "cycle-at-point") :files ("*" (:exclude ".git" ".elisp-autofmt" "LICENSE" "tests")))) (d-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/d-mode.html" :description "D Programming Language major mode for (X)Emacs" :recipe (:package "d-mode" :repo ("https://github.com/Emacs-D-Mode-Maintainers/Emacs-D-Mode" . "d-mode") :files ("*" (:exclude ".git")))) (dart-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/dart-mode.html" :description "Major mode for editing Dart files" :recipe (:package "dart-mode" :repo ("https://github.com/emacsorphanage/dart-mode" . "dart-mode") :files ("*" (:exclude ".git" "LICENSE" "test" "Cask" "Makefile")))) (datetime :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/datetime.html" :description "Parsing, formatting and matching timestamps" :recipe (:package "datetime" :repo ("https://github.com/doublep/datetime.git" . "datetime") :files ("*" (:exclude ".git")))) (denote-refs :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/denote-refs.html" :description "Show links and backlinks in Denote notes" :recipe (:package "denote-refs" :repo ("https://codeberg.org/akib/emacs-denote-refs" . "denote-refs") :files ("*" (:exclude ".git")))) (devhelp :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/devhelp.html" :description "Browse documentation in Devhelp format" :recipe (:package "devhelp" :repo ("https://codeberg.org/akib/emacs-devhelp" . "devhelp") :files ("*" (:exclude ".git")))) (devil :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/devil.html" :description "Minor mode for translating key sequences" :recipe (:package "devil" :repo ("https://github.com/susam/devil" . "devil") :files ("*" (:exclude ".git")))) (diff-ansi :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/diff-ansi.html" :description "Display diff's using alternative diffing tools" :recipe (:package "diff-ansi" :repo ("https://codeberg.org/ideasman42/emacs-diff-ansi" . "diff-ansi") :files ("*" (:exclude ".git" "LICENSE")))) (dirvish :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/dirvish.html" :description "A modern file manager based on dired mode" :recipe (:package "dirvish" :repo ("https://github.com/alexluigit/dirvish" . "dirvish") :files ("*" (:exclude ".git")))) (doc-show-inline :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/doc-show-inline.html" :description "Show doc-strings found in external files" :recipe (:package "doc-show-inline" :repo ("https://codeberg.org/ideasman42/emacs-doc-show-inline" . "doc-show-inline") :files ("*" (:exclude ".git")))) (dockerfile-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/dockerfile-mode.html" :description "Major mode for editing Docker's Dockerfiles" :recipe (:package "dockerfile-mode" :repo ("https://github.com/spotify/dockerfile-mode" . "dockerfile-mode") :files ("*" (:exclude ".git")))) (dracula-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/dracula-theme.html" :description "Dracula Theme" :recipe (:package "dracula-theme" :repo ("https://github.com/dracula/emacs" . "dracula-theme") :files ("*" (:exclude ".git" "INSTALL.md" "screenshot.png" "start_emacs_test.sh" "test-profile.el")))) (drupal-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/drupal-mode.html" :description "Advanced minor mode for Drupal development" :recipe (:package "drupal-mode" :repo ("https://github.com/arnested/drupal-mode.git" . "drupal-mode") :files ("*" (:exclude ".git" ".travis.yml" "COPYING" "Cask")))) (dslide :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/dslide.html" :description "Domain Specific sLIDEs. Programmable Presentation" :recipe (:package "dslide" :repo ("https://github.com/positron-solutions/dslide" . "dslide") :files ("*" (:exclude ".git")))) (eat :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/eat.html" :description "Emulate A Terminal, in a region, in a buffer and in Eshell" :recipe (:package "eat" :repo ("https://codeberg.org/akib/emacs-eat" . "eat") :files ("*" (:exclude ".git")))) (edit-indirect :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/edit-indirect.html" :description "Edit regions in separate buffers" :recipe (:package "edit-indirect" :repo ("https://github.com/Fanael/edit-indirect" . "edit-indirect") :files ("*" (:exclude ".git")))) (editorconfig :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/editorconfig.html" :description "EditorConfig Emacs Plugin" :recipe (:package "editorconfig" :repo ("https://github.com/editorconfig/editorconfig-emacs" . "editorconfig") :files ("*" (:exclude ".git" "LICENSE" "bin" "ert-tests")))) (eglot-inactive-regions :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/eglot-inactive-regions.html" :description "Highlight inactive code regions with eglot power" :recipe (:package "eglot-inactive-regions" :repo ("https://github.com/fargiolas/eglot-inactive-regions" . "eglot-inactive-regions") :files ("*" (:exclude ".git")))) (eldoc-diffstat :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/eldoc-diffstat.html" :description "Make VCS diffstat available via eldoc" :recipe (:package "eldoc-diffstat" :repo ("https://github.com/kljohann/eldoc-diffstat.git" . "eldoc-diffstat") :files ("*" (:exclude ".git")))) (elixir-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/elixir-mode.html" :description "Major mode for editing Elixir files" :recipe (:package "elixir-mode" :repo ("https://github.com/elixir-editors/emacs-elixir" . "elixir-mode") :files ("*" (:exclude ".git" "tests" "Eldev")))) (elpher :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/elpher.html" :description "A friendly gopher and gemini client" :recipe (:package "elpher" :repo ("https://thelambdalab.xyz/git/elpher.git" . "elpher") :files ("*" (:exclude ".git" "Makefile" "ISSUES.org" "RELEASE" "config.mk")))) (emacsql :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/emacsql.html" :description "High-level SQL database front-end" :recipe (:package "emacsql" :repo ("https://github.com/magit/emacsql" . "emacsql") :files ("*" (:exclude ".git" ".github" "Makefile" "tests")))) (engine-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/engine-mode.html" :description "Define and query search engines" :recipe (:package "engine-mode" :repo ("https://github.com/hrs/engine-mode" . "engine-mode") :files ("*" (:exclude ".git" "doc/demo.gif")))) (evil :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil.html" :description "extensible vi layer" :recipe (:package "evil" :repo ("https://github.com/emacs-evil/evil" . "evil") :files ("*" (:exclude ".git" "COPYING" "lib" "scripts")))) (evil-anzu :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-anzu.html" :description "anzu for evil-mode" :recipe (:package "evil-anzu" :repo ("https://github.com/emacsorphanage/evil-anzu.git" . "evil-anzu") :files ("*" (:exclude ".git" "image" "Cask")))) (evil-args :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-args.html" :description "Motions and text objects for delimited arguments in Evil." :recipe (:package "evil-args" :repo ("https://github.com/wcsmith/evil-args.git" . "evil-args") :files ("*" (:exclude ".git")))) (evil-escape :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-escape.html" :description "Escape from anything with a customizable key sequence" :recipe (:package "evil-escape" :repo ("https://github.com/emacsorphanage/evil-escape.git" . "evil-escape") :files ("*" (:exclude ".git" "LICENSE")))) (evil-exchange :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-exchange.html" :description "Exchange text more easily within Evil" :recipe (:package "evil-exchange" :repo ("https://github.com/Dewdrops/evil-exchange.git" . "evil-exchange") :files ("*" (:exclude ".git" ".travis.yml" "Cask" "test" "Makefile")))) (evil-goggles :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-goggles.html" :description "Add a visual hint to evil operations" :recipe (:package "evil-goggles" :repo ("https://github.com/edkolev/evil-goggles.git" . "evil-goggles") :files ("*" (:exclude ".git" ".travis.yml" "test" "Makefile")))) (evil-iedit-state :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-iedit-state.html" :description "Evil states to interface iedit mode." :recipe (:package "evil-iedit-state" :repo ("https://github.com/syl20bnr/evil-iedit-state" . "evil-iedit-state") :files ("*" (:exclude ".git" "LICENSE")))) (evil-indent-plus :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-indent-plus.html" :description "Evil textobjects based on indentation" :recipe (:package "evil-indent-plus" :repo ("https://github.com/TheBB/evil-indent-plus.git" . "evil-indent-plus") :files ("*" (:exclude ".git")))) (evil-lisp-state :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-lisp-state.html" :description "An evil state to edit Lisp code" :recipe (:package "evil-lisp-state" :repo ("https://github.com/syl20bnr/evil-lisp-state.git" . "evil-lisp-state") :files ("*" (:exclude ".git" "LICENSE")))) (evil-matchit :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-matchit.html" :description "Vim matchit ported to Evil" :recipe (:package "evil-matchit" :repo ("https://github.com/redguardtoo/evil-matchit.git" . "evil-matchit") :files ("*" (:exclude ".git" "tests" "Makefile" "screencast.gif")))) (evil-nerd-commenter :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-nerd-commenter.html" :description "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" :recipe (:package "evil-nerd-commenter" :repo ("https://github.com/redguardtoo/evil-nerd-commenter" . "evil-nerd-commenter") :files ("*" (:exclude ".git" "tests" "Makefile" "evil-nerd-commenter-demo.gif" "pkg.sh")))) (evil-numbers :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-numbers.html" :description "Increment/decrement numbers like in VIM" :recipe (:package "evil-numbers" :repo ("https://github.com/juliapath/evil-numbers.git" . "evil-numbers") :files ("*" (:exclude ".git" "COPYING")))) (evil-surround :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-surround.html" :description "emulate surround.vim from Vim" :recipe (:package "evil-surround" :repo ("https://github.com/emacs-evil/evil-surround.git" . "evil-surround") :files ("*" (:exclude ".git" "license.md" "test")))) (evil-visual-mark-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-visual-mark-mode.html" :description "Display evil marks on buffer" :recipe (:package "evil-visual-mark-mode" :repo ("https://github.com/roman/evil-visual-mark-mode.git" . "evil-visual-mark-mode") :files ("*" (:exclude ".git" "LICENSE")))) (evil-visualstar :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/evil-visualstar.html" :description "Starts a * or # search from the visual selection" :recipe (:package "evil-visualstar" :repo ("https://github.com/bling/evil-visualstar.git" . "evil-visualstar") :files ("*" (:exclude ".git")))) (exec-path-from-shell :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/exec-path-from-shell.html" :description "Get environment variables such as $PATH from the shell" :recipe (:package "exec-path-from-shell" :repo ("https://github.com/purcell/exec-path-from-shell.git" . "exec-path-from-shell") :files ("*" (:exclude ".git" ".github" "Makefile")))) (extmap :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/extmap.html" :description "Externally-stored constant mapping for Elisp" :recipe (:package "extmap" :repo ("https://github.com/doublep/extmap.git" . "extmap") :files ("*" (:exclude ".git" "LICENSE")))) (flx :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/flx.html" :description "fuzzy matching with good sorting" :recipe (:package "flx" :repo ("https://github.com/lewang/flx" . "flx") :files ("*" (:exclude ".git" ".travis.yml" "LICENSE" "flx-ido.el" "misc/flx-ido-demo.el" "misc/flx-test-list.el")))) (flx-ido :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/flx-ido.html" :description "flx integration for ido" :recipe (:package "flx-ido" :repo ("https://github.com/lewang/flx" . "flx-ido") :files ("*" (:exclude ".git" ".travis.yml" "Cask" "LICENSE" "tests" "Makefile" "flx.el" "misc/flx-helm-demo.el" "misc/flx-test-list.el")))) (flycheck :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/flycheck.html" :description "On-the-fly syntax checking" :recipe (:package "flycheck" :repo ("https://github.com/flycheck/flycheck" . "flycheck") :files ("*" (:exclude ".git" ".github" "maint" "test" "Makefile" "doc")))) (flymake-collection :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/flymake-collection.html" :description "n/a" :recipe (:package "flymake-collection" :repo ("https://github.com/mohkale/flymake-collection" . "flymake-collection") :files ("*" (:exclude ".git")))) (flymake-guile :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/flymake-guile.html" :description "Guile flymake backend" :recipe (:package "flymake-guile" :repo ("https://framagit.org/flymake-backends/flymake-guile.git" . "flymake-guile") :files ("*" (:exclude ".git")))) (flymake-kondor :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/flymake-kondor.html" :description "Linter with clj-kondo" :recipe (:package "flymake-kondor" :repo ("https://github.com/turbo-cafe/flymake-kondor" . "flymake-kondor") :files ("*" (:exclude ".git" "COPYING.txt")))) (flymake-popon :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/flymake-popon.html" :description "Flymake diagnostics on cursor hover" :recipe (:package "flymake-popon" :repo ("https://codeberg.org/akib/emacs-flymake-popon" . "flymake-popon") :files ("*" (:exclude ".git")))) (focus :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/focus.html" :description "Dim the font color of text in surrounding sections" :recipe (:package "focus" :repo ("https://github.com/larstvei/Focus" . "focus") :files ("*" (:exclude ".git" "*.gif")))) (forth-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/forth-mode.html" :description "Programming language mode for Forth" :recipe (:package "forth-mode" :repo ("https://github.com/larsbrinkhoff/forth-mode" . "forth-mode") :files ("*" (:exclude ".git" "test" "Makefile" "compile.el")))) (free-keys :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/free-keys.html" :description "Show free keybindings for modkeys or prefixes" :recipe (:package "free-keys" :repo ("https://github.com/Fuco1/free-keys" . "free-keys") :files ("*" (:exclude ".git")))) (gc-buffers :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gc-buffers.html" :description "Kill garbage buffers automatically" :recipe (:package "gc-buffers" :repo ("https://codeberg.org/akib/emacs-gc-buffers" . "gc-buffers") :files ("*" (:exclude ".git")))) (geiser :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser.html" :description "GNU Emacs and Scheme talk to each other" :recipe (:package "geiser" :repo ("https://gitlab.com/emacs-geiser/geiser.git" . "geiser") :files ("*" (:exclude ".git")))) (geiser-chez :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-chez.html" :description "Chez and Geiser talk to each other" :recipe (:package "geiser-chez" :repo ("https://gitlab.com/emacs-geiser/chez.git" . "geiser-chez") :files ("*" (:exclude ".git")))) (geiser-chibi :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-chibi.html" :description "Chibi Scheme's implementation of the geiser protocols" :recipe (:package "geiser-chibi" :repo ("https://gitlab.com/emacs-geiser/chibi.git" . "geiser-chibi") :files ("*" (:exclude ".git")))) (geiser-chicken :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-chicken.html" :description "Chicken's implementation of the geiser protocols" :recipe (:package "geiser-chicken" :repo ("https://gitlab.com/emacs-geiser/chicken.git" . "geiser-chicken") :files ("*" (:exclude ".git")))) (geiser-gambit :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-gambit.html" :description "Gambit's implementation of the geiser protocols" :recipe (:package "geiser-gambit" :repo ("https://gitlab.com/emacs-geiser/gambit.git" . "geiser-gambit") :files ("*" (:exclude ".git")))) (geiser-gauche :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-gauche.html" :description "Gauche scheme support for Geiser" :recipe (:package "geiser-gauche" :repo ("https://gitlab.com/emacs-geiser/gauche.git" . "geiser-gauche") :files ("*" (:exclude ".git")))) (geiser-guile :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-guile.html" :description "Guile and Geiser talk to each other" :recipe (:package "geiser-guile" :repo ("https://gitlab.com/emacs-geiser/guile.git" . "geiser-guile") :files ("*" (:exclude ".git")))) (geiser-kawa :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-kawa.html" :description "Kawa scheme support for Geiser" :recipe (:package "geiser-kawa" :repo ("https://gitlab.com/emacs-geiser/kawa.git" . "geiser-kawa") :files ("*" (:exclude ".git" "elisp/tests")))) (geiser-mit :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-mit.html" :description "MIT/GNU Scheme's implementation of the geiser protocols" :recipe (:package "geiser-mit" :repo ("https://gitlab.com/emacs-geiser/mit.git" . "geiser-mit") :files ("*" (:exclude ".git")))) (geiser-racket :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-racket.html" :description "Support for Racket in Geiser" :recipe (:package "geiser-racket" :repo ("https://gitlab.com/emacs-geiser/racket.git" . "geiser-racket") :files ("*" (:exclude ".git")))) (geiser-stklos :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-stklos.html" :description "STklos Scheme implementation of the geiser protocols" :recipe (:package "geiser-stklos" :repo ("https://gitlab.com/emacs-geiser/stklos.git" . "geiser-stklos") :files ("*" (:exclude ".git")))) (git-modes :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/git-modes.html" :description "Major modes for editing Git configuration files" :recipe (:package "git-modes" :repo ("https://github.com/magit/git-modes" . "git-modes") :files ("*" (:exclude ".git" "LICENSE" ".mailmap")))) (gnosis :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gnosis.html" :description "Spaced Repetition System" :recipe (:package "gnosis" :repo ("https://git.thanosapollo.org/gnosis" . "gnosis") :files ("*" (:exclude ".git")))) (gnu-apl-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gnu-apl-mode.html" :description "Emacs mode for GNU APL" :recipe (:package "gnu-apl-mode" :repo ("https://github.com/lokedhs/gnu-apl-mode" . "gnu-apl-mode") :files ("*" (:exclude ".git" "Makefile")))) (gnu-indent :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gnu-indent.html" :description "Indent your code with GNU Indent" :recipe (:package "gnu-indent" :repo ("https://codeberg.org/akib/emacs-gnu-indent" . "gnu-indent") :files ("*" (:exclude ".git")))) (gnuplot :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gnuplot.html" :description "Major-mode and interactive frontend for gnuplot" :recipe (:package "gnuplot" :repo ("https://github.com/emacs-gnuplot/gnuplot" . "gnuplot") :files ("*" (:exclude ".git" "LICENSE" "Makefile" "gpelcard.tex")))) (go-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/go-mode.html" :description "Major mode for the Go programming language" :recipe (:package "go-mode" :repo ("https://github.com/dominikh/go-mode.el" . "go-mode") :files ("*" (:exclude ".git" "generate_authors.sh")))) (golden-ratio :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/golden-ratio.html" :description "Automatic resizing of Emacs windows to the golden ratio" :recipe (:package "golden-ratio" :repo ("https://github.com/roman/golden-ratio.el.git" . "golden-ratio") :files ("*" (:exclude ".git" "LICENSE")))) (gotham-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gotham-theme.html" :description "A very dark Emacs color theme" :recipe (:package "gotham-theme" :repo ("https://depp.brause.cc/gotham-theme.git" . "gotham-theme") :files ("*" (:exclude ".git" "img" "LICENSE")))) (goto-chg :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/goto-chg.html" :description "Go to last change" :recipe (:package "goto-chg" :repo ("https://github.com/emacs-evil/goto-chg" . "goto-chg") :files ("*" (:exclude ".git" "LICENSE")))) (gptel :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gptel.html" :description "Interact with ChatGPT or other LLMs" :recipe (:package "gptel" :repo ("https://github.com/karthink/gptel" . "gptel") :files ("*" (:exclude ".git")))) (graphql-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/graphql-mode.html" :description "Major mode for editing GraphQL schemas" :recipe (:package "graphql-mode" :repo ("https://github.com/davazp/graphql-mode" . "graphql-mode") :files ("*" (:exclude ".git" "test")))) (gruber-darker-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gruber-darker-theme.html" :description "Gruber Darker color theme for Emacs 24." :recipe (:package "gruber-darker-theme" :repo ("https://github.com/rexim/gruber-darker-theme" . "gruber-darker-theme") :files ("*" (:exclude ".git")))) (gruvbox-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/gruvbox-theme.html" :description "A retro-groove colour theme for Emacs" :recipe (:package "gruvbox-theme" :repo ("https://github.com/greduan/emacs-theme-gruvbox.git" . "gruvbox-theme") :files ("*" (:exclude ".git" "images" "palette")))) (guru-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/guru-mode.html" :description "Become an Emacs guru" :recipe (:package "guru-mode" :repo ("https://github.com/bbatsov/guru-mode" . "guru-mode") :files ("*" (:exclude ".git")))) (haml-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/haml-mode.html" :description "Major mode for editing Haml files" :recipe (:package "haml-mode" :repo ("https://github.com/nex3/haml-mode" . "haml-mode") :files ("*" (:exclude ".git")))) (haskell-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/haskell-mode.html" :description "A Haskell editing mode" :recipe (:package "haskell-mode" :repo ("https://github.com/haskell/haskell-mode" . "haskell-mode") :files ("*" (:exclude ".git" "images" "tests" "logo.svg")))) (haskell-tng-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/haskell-tng-mode.html" :description "Major mode for editing Haskell" :recipe (:package "haskell-tng-mode" :repo ("https://gitlab.com/tseenshe/haskell-tng.el" . "haskell-tng-mode") :files ("*" (:exclude ".git" "COPYING")))) (haskell-ts-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/haskell-ts-mode.html" :description "A treesit based major mode for haskell" :recipe (:package "haskell-ts-mode" :repo ("https://codeberg.org/pranshu/haskell-ts-mode" . "haskell-ts-mode") :files ("*" (:exclude ".git")))) (helm :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/helm.html" :description "Helm is an Emacs incremental and narrowing framework" :recipe (:package "helm" :repo ("https://github.com/emacs-helm/helm" . "helm") :files ("*" (:exclude ".git" "images" "Cask" "Makefile" "emacs-helm.sh" "helm-core.el" "helm.el" "helm-lib.el" "helm-source.el" "helm-multi-match.el")))) (helm-core :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/helm-core.html" :description "Development files for Helm" :recipe (:package "helm-core" :repo ("https://github.com/emacs-helm/helm" . "helm-core") :files ("*" (:exclude ".git" "images" "Cask" "Makefile" "emacs-helm.sh" "helm-adaptive.el" "helm-bookmark.el" "helm-buffers.el" "helm-color.el" "helm-comint.el" "helm-command.el" "helm-config.el" "helm-dabbrev.el" "helm-easymenu.el" "helm-elisp.el" "helm-elisp-package.el" "helm-epa.el" "helm-eshell.el" "helm-eval.el" "helm-external.el" "helm-fd.el" "helm-files.el" "helm-find.el" "helm-font.el" "helm-for-files.el" "helm-global-bindings.el" "helm-grep.el" "helm-help.el" "helm-id-utils.el" "helm-imenu.el" "helm-info.el" "helm-locate.el" "helm-man.el" "helm-misc.el" "helm-mode.el" "helm-net.el" "helm-occur.el" "helm-pkg.el" "helm-regexp.el" "helm-ring.el" "helm-semantic.el" "helm-shell.el" "helm-sys.el" "helm-tags.el" "helm-types.el" "helm-utils.el" "helm-x-files.el")))) (hideshowvis :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/hideshowvis.html" :description "Fringe markers for regions foldable by hideshow.el" :recipe (:package "hideshowvis" :repo ("https://github.com/sheijk/hideshowvis" . "hideshowvis") :files ("*" (:exclude ".git")))) (highlight-parentheses :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/highlight-parentheses.html" :description "Highlight surrounding parentheses" :recipe (:package "highlight-parentheses" :repo ("https://git.sr.ht/~tsdh/highlight-parentheses.el" . "highlight-parentheses") :branch "main" :files ("*" (:exclude ".git" "LICENSE")))) (hl-block-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/hl-block-mode.html" :description "Highlighting nested blocks" :recipe (:package "hl-block-mode" :repo ("https://codeberg.org/ideasman42/emacs-hl-block-mode" . "hl-block-mode") :files ("*" (:exclude ".git")))) (hl-column :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/hl-column.html" :description "Highlight the current column" :recipe (:package "hl-column" :repo ("https://codeberg.org/akib/emacs-hl-column" . "hl-column") :files ("*" (:exclude ".git")))) (htmlize :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/htmlize.html" :description "Convert buffer text and decorations to HTML." :recipe (:package "htmlize" :repo ("https://github.com/hniksic/emacs-htmlize" . "htmlize") :files ("*" (:exclude ".git" "htmlize.el.html")))) (hyperdrive :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/hyperdrive.html" :description "P2P filesystem" :recipe (:package "hyperdrive" :repo ("https://git.sr.ht/~ushin/hyperdrive.el" . "hyperdrive") :files ("*" (:exclude ".git")))) (hyperdrive-org-transclusion :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/hyperdrive-org-transclusion.html" :description "Tranclude hyperdrive content" :recipe (:package "hyperdrive-org-transclusion" :repo ("https://git.sr.ht/~ushin/hyperdrive-org-transclusion" . "hyperdrive-org-transclusion") :files ("*" (:exclude ".git")))) (idle-highlight-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/idle-highlight-mode.html" :description "Highlight the word the point is on" :recipe (:package "idle-highlight-mode" :repo ("https://codeberg.org/ideasman42/emacs-idle-highlight-mode" . "idle-highlight-mode") :files ("*" (:exclude ".git" ".elisp-autofmt")))) (idris-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/idris-mode.html" :description "Major mode for editing Idris code" :recipe (:package "idris-mode" :repo ("https://github.com/idris-hackers/idris-mode" . "idris-mode") :files ("*" (:exclude ".git" "COPYING" "test-data" "Makefile" "documentation.tex" "logo-small.png" "idris-tests*.el")))) (iedit :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/iedit.html" :description "Edit multiple regions in the same way simultaneously." :recipe (:package "iedit" :repo ("https://github.com/victorhge/iedit.git" . "iedit") :files ("*" (:exclude ".git" "COPYING" "iedit-demo.gif" "release.sh")))) (inf-clojure :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/inf-clojure.html" :description "Run an external Clojure process in an Emacs buffer" :recipe (:package "inf-clojure" :repo ("https://github.com/clojure-emacs/inf-clojure" . "inf-clojure") :files ("*" (:exclude ".git" "test")))) (inf-ruby :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/inf-ruby.html" :description "Run a Ruby process in a buffer" :recipe (:package "inf-ruby" :repo ("https://github.com/nonsequitur/inf-ruby" . "inf-ruby") :files ("*" (:exclude ".git")))) (inkpot-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/inkpot-theme.html" :description "A port of vim's inkpot theme" :recipe (:package "inkpot-theme" :repo ("https://codeberg.org/ideasman42/emacs-theme-inkpot" . "inkpot-theme") :files ("*" (:exclude ".git")))) (iwindow :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/iwindow.html" :description "Interactively manipulate windows" :recipe (:package "iwindow" :repo ("https://codeberg.org/akib/emacs-iwindow" . "iwindow") :files ("*" (:exclude ".git")))) (j-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/j-mode.html" :description "Major mode for editing J programs" :recipe (:package "j-mode" :repo ("https://github.com/zellio/j-mode" . "j-mode") :files ("*" (:exclude ".git" "LICENSE")))) (jade-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/jade-mode.html" :description "Major mode for editing .jade files" :recipe (:package "jade-mode" :repo ("https://github.com/brianc/jade-mode" . "jade-mode") :files ("*" (:exclude ".git" "test" "Cask" "Makefile" "example.jade" "example.json" "stylus-mode.el")))) (jinja2-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/jinja2-mode.html" :description "A major mode for jinja2" :recipe (:package "jinja2-mode" :repo ("https://github.com/paradoxxxzero/jinja2-mode.git" . "jinja2-mode") :files ("*" (:exclude ".git")))) (julia-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/julia-mode.html" :description "Major mode for editing Julia source code" :recipe (:package "julia-mode" :repo ("https://github.com/JuliaEditorSupport/julia-emacs" . "julia-mode") :files ("*" (:exclude ".git" "julia-mode-tests.el" "logo.png")))) (keycast :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/keycast.html" :description "Show current command and its binding" :recipe (:package "keycast" :repo ("https://github.com/tarsius/keycast" . "keycast") :files ("*" (:exclude ".git" "Makefile")))) (kotlin-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/kotlin-mode.html" :description "Major mode for kotlin" :recipe (:package "kotlin-mode" :repo ("https://github.com/Emacs-Kotlin-Mode-Maintainers/kotlin-mode" . "kotlin-mode") :files ("*" (:exclude ".git" "doc" "test" "Cask" "Makefile")))) (llama :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/llama.html" :description "Compact syntax for short lambda" :recipe (:package "llama" :repo ("https://github.com/tarsius/llama" . "llama") :files ("*" (:exclude ".git" ".github" "LICENSE")))) (logview :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/logview.html" :description "Major mode for viewing log files" :recipe (:package "logview" :repo ("https://github.com/doublep/logview.git" . "logview") :files ("*" (:exclude ".git")))) (loopy :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/loopy.html" :description "A looping macro" :recipe (:package "loopy" :repo ("https://github.com/okamsn/loopy" . "loopy") :files ("*" (:exclude ".git")))) (loopy-dash :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/loopy-dash.html" :description "Dash destructuring for `loopy'" :recipe (:package "loopy-dash" :repo ("https://github.com/okamsn/loopy-dash" . "loopy-dash") :files ("*" (:exclude ".git")))) (lorem-ipsum :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/lorem-ipsum.html" :description "Insert dummy pseudo Latin text" :recipe (:package "lorem-ipsum" :repo ("https://github.com/jschaf/emacs-lorem-ipsum" . "lorem-ipsum") :files ("*" (:exclude ".git")))) (lua-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/lua-mode.html" :description "a major-mode for editing Lua scripts" :recipe (:package "lua-mode" :repo ("https://github.com/immerrr/lua-mode/" . "lua-mode") :files ("*" (:exclude ".git" "COPYING" "test" "travis" "init-tryout.el")))) (macrostep :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/macrostep.html" :description "Interactive macro expander" :recipe (:package "macrostep" :repo ("https://github.com/emacsorphanage/macrostep" . "macrostep") :files ("*" (:exclude ".git" "macrostep-test.el")))) (magit :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/magit.html" :description "A Git porcelain inside Emacs" :recipe (:package "magit" :repo ("https://github.com/emacsmirror/nongnu_elpa" . "magit") :branch "elpa/magit" :files ("*" (:exclude ".git" "docs" "test" ".github" ".mailmap" "LICENSE" "default.mk" "Makefile" "lisp/Makefile" "lisp/magit-section.el")))) (magit-section :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/magit-section.html" :description "Sections for read-only buffers" :recipe (:package "magit-section" :repo ("https://github.com/emacsmirror/nongnu_elpa" . "magit-section") :branch "elpa/magit-section" :files ("*" (:exclude ".git" "docs" "test" ".github" ".mailmap" "LICENSE" "README.md" "CHANGELOG" "default.mk" "Makefile" "lisp/Makefile" "lisp/git-commit.el" "lisp/git-rebase.el" "lisp/magit-apply.el" "lisp/magit-base.el" "lisp/magit-bisect.el" "lisp/magit-blame.el" "lisp/magit-bookmark.el" "lisp/magit-branch.el" "lisp/magit-bundle.el" "lisp/magit-clone.el" "lisp/magit-commit.el" "lisp/magit-core.el" "lisp/magit-diff.el" "lisp/magit-ediff.el" "lisp/magit-extras.el" "lisp/magit-fetch.el" "lisp/magit-files.el" "lisp/magit-git.el" "lisp/magit-gitignore.el" "lisp/magit-log.el" "lisp/magit-margin.el" "lisp/magit-merge.el" "lisp/magit-mode.el" "lisp/magit-notes.el" "lisp/magit-patch.el" "lisp/magit-process.el" "lisp/magit-pull.el" "lisp/magit-push.el" "lisp/magit-reflog.el" "lisp/magit-refs.el" "lisp/magit-remote.el" "lisp/magit-repos.el" "lisp/magit-reset.el" "lisp/magit-sequence.el" "lisp/magit-sparse-checkout.el" "lisp/magit-stash.el" "lisp/magit-status.el" "lisp/magit-submodule.el" "lisp/magit-subtree.el" "lisp/magit-tag.el" "lisp/magit-transient.el" "lisp/magit-wip.el" "lisp/magit-worktree.el" "lisp/magit.el")))) (markdown-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/markdown-mode.html" :description "Major mode for Markdown-formatted text" :recipe (:package "markdown-mode" :repo ("https://github.com/jrblevin/markdown-mode" . "markdown-mode") :files ("*" (:exclude ".git" "scripts" "tests" "Makefile" "webpage.sh")))) (mastodon :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/mastodon.html" :description "Client for fediverse services using the Mastodon API" :recipe (:package "mastodon" :repo ("https://codeberg.org/martianh/mastodon.el" . "mastodon") :branch "main" :files ("*" (:exclude ".git")))) (material-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/material-theme.html" :description "A Theme based on the colors of the Google Material Design" :recipe (:package "material-theme" :repo ("https://github.com/cpaulik/emacs-material-theme" . "material-theme") :files ("*" (:exclude ".git" "*.png")))) (mentor :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/mentor.html" :description "Frontend for the rTorrent bittorrent client" :recipe (:package "mentor" :repo ("https://github.com/skangas/mentor.git" . "mentor") :files ("*" (:exclude ".git")))) (meow :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/meow.html" :description "Yet Another modal editing" :recipe (:package "meow" :repo ("https://github.com/meow-edit/meow" . "meow") :files ("*" (:exclude ".git")))) (minibar :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/minibar.html" :description "Modular status bar in minibuffer" :recipe (:package "minibar" :repo ("https://codeberg.org/akib/emacs-minibar" . "minibar") :files ("*" (:exclude ".git")))) (moe-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/moe-theme.html" :description "A colorful eye-candy theme. Moe, moe, kyun!" :recipe (:package "moe-theme" :repo ("https://github.com/kuanyui/moe-theme.el.git" . "moe-theme") :files ("*" (:exclude ".git" "pics" "LICENSE")))) (monokai-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/monokai-theme.html" :description "A fruity color theme for Emacs." :recipe (:package "monokai-theme" :repo ("https://github.com/oneKelvinSmith/monokai-emacs" . "monokai-theme") :files ("*" (:exclude ".git" "LICENSE.md" "assets")))) (mpv :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/mpv.html" :description "control mpv for easy note-taking" :recipe (:package "mpv" :repo ("https://github.com/kljohann/mpv.el" . "mpv") :files ("*" (:exclude ".git" "COPYING")))) (multiple-cursors :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/multiple-cursors.html" :description "Multiple cursors for emacs." :recipe (:package "multiple-cursors" :repo ("https://github.com/magnars/multiple-cursors.el" . "multiple-cursors") :files ("*" (:exclude ".git" "features")))) (nasm-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/nasm-mode.html" :description "NASM x86 assembly major mode" :recipe (:package "nasm-mode" :repo ("https://github.com/skeeto/nasm-mode" . "nasm-mode") :files ("*" (:exclude ".git" "Makefile")))) (nginx-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/nginx-mode.html" :description "major mode for editing nginx config files" :recipe (:package "nginx-mode" :repo ("https://github.com/ajc/nginx-mode" . "nginx-mode") :files ("*" (:exclude ".git")))) (nix-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/nix-mode.html" :description "Major mode for editing .nix files" :recipe (:package "nix-mode" :repo ("https://github.com/NixOS/nix-mode" . "nix-mode") :files ("*" (:exclude ".git" ".github" "tests" "Cask" "*.nix" "*.lock")))) (oblivion-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/oblivion-theme.html" :description "A port of GEdit oblivion theme" :recipe (:package "oblivion-theme" :repo ("https://codeberg.org/ideasman42/emacs-theme-oblivion" . "oblivion-theme") :files ("*" (:exclude ".git")))) (opam-switch-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/opam-switch-mode.html" :description "Select OCaml opam switches via a menu" :recipe (:package "opam-switch-mode" :repo ("https://github.com/ProofGeneral/opam-switch-mode" . "opam-switch-mode") :files ("*" (:exclude ".git" "LICENSE")))) (org-auto-tangle :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-auto-tangle.html" :description "Automatically and Asynchronously tangles org files on save" :recipe (:package "org-auto-tangle" :repo ("https://github.com/yilkalargaw/org-auto-tangle" . "org-auto-tangle") :files ("*" (:exclude ".git" "License.org")))) (org-contrib :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-contrib.html" :description "Unmaintained add-ons for Org-mode" :recipe (:package "org-contrib" :repo ("https://git.sr.ht/~bzg/org-contrib" . "org-contrib") :files ("*" (:exclude ".git" "COPYING" "README.md")))) (org-drill :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-drill.html" :description "Self-testing using spaced repetition" :recipe (:package "org-drill" :repo ("https://gitlab.com/phillord/org-drill.git" . "org-drill") :files ("*" (:exclude ".git" ".gitlab-ci.yml" "Cask")))) (org-journal :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-journal.html" :description "a simple org-mode based journaling mode" :recipe (:package "org-journal" :repo ("https://github.com/bastibe/org-journal.git" . "org-journal") :files ("*" (:exclude ".git" ".github" ".travis.yml" "Makefile" "org-journal.svg" "tests")))) (org-mime :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-mime.html" :description "org html export for text/html MIME emails" :recipe (:package "org-mime" :repo ("https://github.com/org-mime/org-mime.git" . "org-mime") :files ("*" (:exclude ".git" ".travis.yml" "Makefile" "screenshot.png" "test")))) (org-present :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-present.html" :description "Minimalist presentation minor-mode for Emacs org-mode." :recipe (:package "org-present" :repo ("https://github.com/rlister/org-present.git" . "org-present") :files ("*" (:exclude ".git")))) (org-superstar :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-superstar.html" :description "Prettify headings and plain lists in Org mode" :recipe (:package "org-superstar" :repo ("https://github.com/integral-dw/org-superstar-mode.git" . "org-superstar") :files ("*" (:exclude ".git" "LICENSE" ".github" "demos" "tests" "DEMO.org" "sample_image.png")))) (org-transclusion-http :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-transclusion-http.html" :description "Transclude over HTTP" :recipe (:package "org-transclusion-http" :repo ("https://git.sr.ht/~ushin/org-transclusion-http" . "org-transclusion-http") :files ("*" (:exclude ".git")))) (org-tree-slide :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/org-tree-slide.html" :description "A presentation tool for org-mode" :recipe (:package "org-tree-slide" :repo ("https://github.com/takaxp/org-tree-slide.git" . "org-tree-slide") :files ("*" (:exclude ".git" "LICENSE" ".github")))) (orgit :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/orgit.html" :description "Support for Org links to Magit buffers" :recipe (:package "orgit" :repo ("https://github.com/magit/orgit.git" . "orgit") :files ("*" (:exclude ".git")))) (p4-16-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/p4-16-mode.html" :description "Support for the P4_16 programming language" :recipe (:package "p4-16-mode" :repo ("https://github.com/SohamG/p4_16-mode.el" . "p4-16-mode") :files ("*" (:exclude ".git")))) (package-lint :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/package-lint.html" :description "A linting library for elisp package authors" :recipe (:package "package-lint" :repo ("https://github.com/purcell/package-lint" . "package-lint") :files ("*" (:exclude ".git" ".github" "batch-tests" "tools" "package-lint-test.el" "run-tests.sh")))) (pacmacs :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/pacmacs.html" :description "Pacman for Emacs" :recipe (:package "pacmacs" :repo ("https://github.com/codingteam/pacmacs.el.git" . "pacmacs") :files ("*" (:exclude ".git" "it-cases" "sprites/src" "test-data" "test" "tools" ".travis.yml" "Cask")))) (page-break-lines :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/page-break-lines.html" :description "Display ^L page breaks as tidy horizontal lines" :recipe (:package "page-break-lines" :repo ("https://github.com/purcell/page-break-lines" . "page-break-lines") :files ("*" (:exclude ".git" ".github" "Makefile" "*.png")))) (paredit :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/paredit.html" :description "minor mode for editing parentheses" :recipe (:package "paredit" :repo ("https://mumble.net/~campbell/git/paredit.git" . "paredit") :files ("*" (:exclude ".git" "COPYING" "check.sh" "genhtml.sh" "test.el")))) (parseclj :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/parseclj.html" :description "Clojure/EDN parser" :recipe (:package "parseclj" :repo ("https://github.com/clojure-emacs/parseclj" . "parseclj") :files ("*" (:exclude ".git" "LICENSE" "test")))) (parseedn :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/parseedn.html" :description "Clojure/EDN parser" :recipe (:package "parseedn" :repo ("https://github.com/clojure-emacs/parseedn" . "parseedn") :files ("*" (:exclude ".git" "test")))) (pcmpl-args :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/pcmpl-args.html" :description "Enhanced shell command completion" :recipe (:package "pcmpl-args" :repo ("https://github.com/JonWaltman/pcmpl-args.el" . "pcmpl-args") :files ("*" (:exclude ".git")))) (pcre2el :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/pcre2el.html" :description "regexp syntax converter" :recipe (:package "pcre2el" :repo ("https://github.com/joddie/pcre2el" . "pcre2el") :files ("*" (:exclude ".git" ".travis.yml" "pcre2el-tests.el")))) (pdf-tools :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/pdf-tools.html" :description "Support library for PDF documents" :recipe (:package "pdf-tools" :repo ("https://github.com/vedang/pdf-tools" . "pdf-tools") :files ("*" (:exclude ".git" "COPYING")))) (php-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/php-mode.html" :description "Major mode for editing PHP code" :recipe (:package "php-mode" :repo ("https://github.com/emacs-php/php-mode" . "php-mode") :files ("*" (:exclude ".git" "LICENSE")))) (popon :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/popon.html" :description "\"Pop\" floating text \"on\" a window" :recipe (:package "popon" :repo ("https://codeberg.org/akib/emacs-popon" . "popon") :files ("*" (:exclude ".git")))) (popup :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/popup.html" :description "Visual Popup User Interface" :recipe (:package "popup" :repo ("https://github.com/auto-complete/popup-el" . "popup") :files ("*" (:exclude ".git" "LICENSE")))) (projectile :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/projectile.html" :description "Manage and navigate projects in Emacs easily" :recipe (:package "projectile" :repo ("https://github.com/bbatsov/projectile" . "projectile") :files ("*" (:exclude ".git" "LICENSE" "doc" "test")))) (proof-general :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/proof-general.html" :description "A generic Emacs interface for proof assistants" :recipe (:package "proof-general" :repo ("https://github.com/ProofGeneral/PG" . "proof-general") :files ("*" (:exclude ".git" "COPYING" "ci")))) (prop-menu :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/prop-menu.html" :description "Create and display a context menu based on text and overlay properties" :recipe (:package "prop-menu" :repo ("https://github.com/david-christiansen/prop-menu-el" . "prop-menu") :files ("*" (:exclude ".git" "Makefile" "prop-menu-tests.el")))) (racket-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/racket-mode.html" :description "Racket editing, REPL, and more" :recipe (:package "racket-mode" :repo ("https://github.com/greghendershott/racket-mode" . "racket-mode") :files ("*" (:exclude ".git")))) (radio :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/radio.html" :description "Listen to Internet radio" :recipe (:package "radio" :repo ("https://github.com/jroimartin/radio" . "radio") :files ("*" (:exclude ".git" "COPYING")))) (rainbow-delimiters :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/rainbow-delimiters.html" :description "Highlight brackets according to their depth" :recipe (:package "rainbow-delimiters" :repo ("https://github.com/Fanael/rainbow-delimiters.git" . "rainbow-delimiters") :files ("*" (:exclude ".git" "COPYING" ".github" "rainbow-delimiters-test.el" "run-tests.sh")))) (raku-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/raku-mode.html" :description "Major mode for editing Raku code" :recipe (:package "raku-mode" :repo ("https://github.com/Raku/raku-mode" . "raku-mode") :files ("*" (:exclude ".git" "test" "Cask" "Makefile" "npq-mode.el")))) (recomplete :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/recomplete.html" :description "Immediately (re)complete actions" :recipe (:package "recomplete" :repo ("https://codeberg.org/ideasman42/emacs-recomplete" . "recomplete") :files ("*" (:exclude ".git" "LICENSE" ".elisp-autofmt")))) (reformatter :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/reformatter.html" :description "Define commands which run reformatters on the current buffer" :recipe (:package "reformatter" :repo ("https://github.com/purcell/emacs-reformatter" . "reformatter") :files ("*" (:exclude ".git" ".github" "Makefile" "*-tests.el")))) (request :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/request.html" :description "Compatible layer for URL request in Emacs" :recipe (:package "request" :repo ("https://github.com/tkf/emacs-request" . "request") :files ("*" (:exclude ".git" "tests" "doc" "COPYING")))) (rfc-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/rfc-mode.html" :description "RFC document browser and viewer" :recipe (:package "rfc-mode" :repo ("https://github.com/galdor/rfc-mode" . "rfc-mode") :files ("*" (:exclude ".git")))) (rpm-spec-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/rpm-spec-mode.html" :description "RPM spec file editing commands for Emacs/XEmacs" :recipe (:package "rpm-spec-mode" :repo ("https://github.com/Thaodan/rpm-spec-mode" . "rpm-spec-mode") :files ("*" (:exclude ".git")))) (rubocop :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/rubocop.html" :description "An Emacs interface for RuboCop" :recipe (:package "rubocop" :repo ("https://github.com/rubocop/rubocop-emacs" . "rubocop") :files ("*" (:exclude ".git")))) (rust-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/rust-mode.html" :description "A major-mode for editing Rust source code" :recipe (:package "rust-mode" :repo ("https://github.com/rust-lang/rust-mode" . "rust-mode") :files ("*" (:exclude ".git" "test-*" "triagebot.toml" "*.sh")))) (sass-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/sass-mode.html" :description "Major mode for editing Sass files" :recipe (:package "sass-mode" :repo ("https://github.com/nex3/sass-mode" . "sass-mode") :files ("*" (:exclude ".git")))) (scad-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/scad-mode.html" :description "A major mode for editing OpenSCAD code" :recipe (:package "scad-mode" :repo ("https://github.com/openscad/emacs-scad-mode" . "scad-mode") :files ("*" (:exclude ".git" "LICENSE")))) (scala-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/scala-mode.html" :description "Major mode for editing Scala" :recipe (:package "scala-mode" :repo ("https://github.com/hvesalai/emacs-scala-mode" . "scala-mode") :files ("*" (:exclude ".git" "LICENSE" "test" "Cask" "Makefile")))) (scroll-on-drag :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/scroll-on-drag.html" :description "Interactive scrolling." :recipe (:package "scroll-on-drag" :repo ("https://codeberg.org/ideasman42/emacs-scroll-on-drag" . "scroll-on-drag") :files ("*" (:exclude ".git" "LICENSE" ".elisp-autofmt")))) (scroll-on-jump :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/scroll-on-jump.html" :description "Scroll when jumping to a new point" :recipe (:package "scroll-on-jump" :repo ("https://codeberg.org/ideasman42/emacs-scroll-on-jump" . "scroll-on-jump") :files ("*" (:exclude ".git" "LICENSE" ".elisp-autofmt")))) (sesman :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/sesman.html" :description "Generic Session Manager" :recipe (:package "sesman" :repo ("https://github.com/vspinu/sesman" . "sesman") :files ("*" (:exclude ".git" "targets")))) (shellcop :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/shellcop.html" :description "Analyze info&error in shell-mode" :recipe (:package "shellcop" :repo ("https://github.com/redguardtoo/shellcop.git" . "shellcop") :files ("*" (:exclude ".git" "LICENSE" "demo.png")))) (slime :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/slime.html" :description "Superior Lisp Interaction Mode for Emacs" :recipe (:package "slime" :repo ("https://github.com/slime/slime" . "slime") :files ("*" (:exclude ".git")))) (sly :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/sly.html" :description "Sylvester the Cat's Common Lisp IDE" :recipe (:package "sly" :repo ("https://github.com/joaotavora/sly" . "sly") :files ("*" (:exclude ".git")))) (smartparens :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/smartparens.html" :description "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." :recipe (:package "smartparens" :repo ("https://github.com/Fuco1/smartparens" . "smartparens") :files ("*" (:exclude ".git" "LICENSE" "dev" "doc" "images" "test")))) (solarized-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/solarized-theme.html" :description "The Solarized color theme" :recipe (:package "solarized-theme" :repo ("https://github.com/bbatsov/solarized-emacs" . "solarized-theme") :files ("*" (:exclude ".git" "child-theme-example" "colorlab" "dev-emacs.d" "Cask" "Makefile")))) (spacemacs-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/spacemacs-theme.html" :description "Color theme with a dark and light versions." :recipe (:package "spacemacs-theme" :repo ("https://github.com/nashamri/spacemacs-theme.git" . "spacemacs-theme") :files ("*" (:exclude ".git" "LICENSE" "img")))) (spell-fu :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/spell-fu.html" :description "Fast & light spelling highlighter" :recipe (:package "spell-fu" :repo ("https://codeberg.org/ideasman42/emacs-spell-fu" . "spell-fu") :files ("*" (:exclude ".git" "LICENSE" ".elisp-autofmt")))) (sqlite3 :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/sqlite3.html" :description "Direct access to the core SQLite3 API" :recipe (:package "sqlite3" :repo ("https://github.com/pekingduck/emacs-sqlite3-api" . "sqlite3") :files ("*" (:exclude ".git" "LICENSE" "tests" "tools")))) (stylus-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/stylus-mode.html" :description "Major mode for editing .styl files" :recipe (:package "stylus-mode" :repo ("https://github.com/brianc/jade-mode" . "stylus-mode") :files ("*" (:exclude ".git" "test" "Cask" "Makefile" "example.jade" "example.json" "jade-mode.el")))) (subatomic-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/subatomic-theme.html" :description "Low contrast bluish color theme" :recipe (:package "subatomic-theme" :repo ("https://github.com/cryon/subatomic-theme" . "subatomic-theme") :files ("*" (:exclude ".git" "readme-files")))) (subed :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/subed.html" :description "A major mode for editing subtitles" :recipe (:package "subed" :repo ("https://github.com/sachac/subed" . "subed") :files ("*" (:exclude ".git" "LICENSES/GPL-3.0-or-later.txt")))) (sweeprolog :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/sweeprolog.html" :description "Embedded SWI-Prolog" :recipe (:package "sweeprolog" :repo ("https://github.com/SWI-Prolog/packages-sweep" . "sweeprolog") :files ("*" (:exclude ".git" "LICENSE")))) (swift-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/swift-mode.html" :description "Major-mode for Apple's Swift programming language" :recipe (:package "swift-mode" :repo ("https://github.com/swift-emacs/swift-mode" . "swift-mode") :files ("*" (:exclude ".git" "COPYING" "scripts" "test" "Eldev" "Makefile")))) (symbol-overlay :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/symbol-overlay.html" :description "Highlight symbols with keymap-enabled overlays" :recipe (:package "symbol-overlay" :repo ("https://github.com/wolray/symbol-overlay" . "symbol-overlay") :files ("*" (:exclude ".git" "*.png")))) (systemd :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/systemd.html" :description "Major mode for editing systemd units" :recipe (:package "systemd" :repo ("https://github.com/holomorph/systemd-mode" . "systemd") :files ("*" (:exclude ".git" "LICENSE" "test" "Makefile")))) (tablist :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/tablist.html" :description "Extended tabulated-list-mode" :recipe (:package "tablist" :repo ("https://github.com/politza/tablist" . "tablist") :files ("*" (:exclude ".git" "COPYING")))) (tangotango-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/tangotango-theme.html" :description "Tango Palette color theme for Emacs 24." :recipe (:package "tangotango-theme" :repo ("https://github.com/juba/color-theme-tangotango.git" . "tangotango-theme") :files ("*" (:exclude ".git" "color-theme-tangotango.el" "screenshots")))) (teco :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/teco.html" :description "Teco interpreter for Gnu Emacs" :recipe (:package "teco" :repo ("https://github.com/mtk/teco" . "teco") :files ("*" (:exclude ".git")))) (telephone-line :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/telephone-line.html" :description "Rewrite of Powerline" :recipe (:package "telephone-line" :repo ("https://github.com/dbordak/telephone-line.git" . "telephone-line") :files ("*" (:exclude ".git" "COPYING" "screenshots")))) (testcover-mark-line :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/testcover-mark-line.html" :description "Mark whole line with Testcover" :recipe (:package "testcover-mark-line" :repo ("https://codeberg.org/akib/emacs-testcover-mark-line" . "testcover-mark-line") :files ("*" (:exclude ".git")))) (textile-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/textile-mode.html" :description "Textile markup editing major mode" :recipe (:package "textile-mode" :repo ("https://github.com/juba/textile-mode" . "textile-mode") :files ("*" (:exclude ".git")))) (toc-org :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/toc-org.html" :description "add table of contents to org-mode files (formerly, org-toc)" :recipe (:package "toc-org" :repo ("https://github.com/snosov1/toc-org.git" . "toc-org") :files ("*" (:exclude ".git" "COPYING" ".travis.yml" "toc-org-test.el")))) (totp-auth :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/totp-auth.html" :description "RFC6238 TOTP" :recipe (:package "totp-auth" :repo ("https://gitlab.com/fledermaus/totp.el" . "totp-auth") :files ("*" (:exclude ".git" "base32.el" "Makefile" "*.md" "*.html" "tests")))) (tp :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/tp.html" :description "Utilities for transient menus that POST to an API" :recipe (:package "tp" :repo ("https://codeberg.org/martianh/tp.el" . "tp") :files ("*" (:exclude ".git" "LICENSE")))) (treesit-fold :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/treesit-fold.html" :description "Code folding using treesit" :recipe (:package "treesit-fold" :repo ("https://github.com/emacs-tree-sitter/treesit-fold" . "treesit-fold") :files ("*" (:exclude ".git")))) (treeview :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/treeview.html" :description "A generic tree navigation library" :recipe (:package "treeview" :repo ("https://github.com/tilmanrassy/emacs-treeview" . "treeview") :files ("*" (:exclude ".git" "LICENSE")))) (tuareg :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/tuareg.html" :description "OCaml mode" :recipe (:package "tuareg" :repo ("https://github.com/ocaml/tuareg.git" . "tuareg") :files ("*" (:exclude ".git" "COPYING")))) (typescript-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/typescript-mode.html" :description "Major mode for editing typescript" :recipe (:package "typescript-mode" :repo ("https://github.com/emacs-typescript/typescript.el" . "typescript-mode") :files ("*" (:exclude ".git" ".github" "Cask" "Dockerfile" "Makefile" "*test*")))) (typst-ts-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/typst-ts-mode.html" :description "Tree Sitter support for Typst" :recipe (:package "typst-ts-mode" :repo ("https://codeberg.org/meow_king/typst-ts-mode" . "typst-ts-mode") :files ("*" (:exclude ".git")))) (ujelly-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/ujelly-theme.html" :description "Ujelly theme for GNU Emacs 24 (deftheme)" :recipe (:package "ujelly-theme" :repo ("https://github.com/marktran/color-theme-ujelly" . "ujelly-theme") :files ("*" (:exclude ".git")))) (undo-fu :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/undo-fu.html" :description "Undo helper with redo" :recipe (:package "undo-fu" :repo ("https://codeberg.org/ideasman42/emacs-undo-fu" . "undo-fu") :files ("*" (:exclude ".git" ".elisp-autofmt" "LICENSE")))) (undo-fu-session :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/undo-fu-session.html" :description "Persistent undo, available between sessions" :recipe (:package "undo-fu-session" :repo ("https://codeberg.org/ideasman42/emacs-undo-fu-session" . "undo-fu-session") :files ("*" (:exclude ".git" ".elisp-autofmt" "LICENSE")))) (vc-fossil :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/vc-fossil.html" :description "VC backend for the fossil sofware configuraiton management system" :recipe (:package "vc-fossil" :repo ("https://github.com/venks1/emacs-fossil" . "vc-fossil") :files ("*" (:exclude ".git")))) (vcomplete :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/vcomplete.html" :description "Visual completions" :recipe (:package "vcomplete" :repo ("https://git.sr.ht/~dsemy/vcomplete" . "vcomplete") :files ("*" (:exclude ".git")))) (visual-fill-column :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/visual-fill-column.html" :description "fill-column for visual-line-mode" :recipe (:package "visual-fill-column" :repo ("https://codeberg.org/joostkremers/visual-fill-column.git" . "visual-fill-column") :files ("*" (:exclude ".git" "Cask" "LICENSE" "adaptive-wrap.png" "after.png" "before.png" "centered.png" "no-adaptive-wrap.png" "test")))) (vm :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/vm.html" :description "n/a" :recipe (:package "vm" :repo ("https://gitlab.com/emacs-vm/vm" . "vm") :files ("*" (:exclude ".git")))) (web-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/web-mode.html" :description "major mode for editing web templates" :recipe (:package "web-mode" :repo ("https://github.com/fxbois/web-mode" . "web-mode") :files ("*" (:exclude ".git" "LICENSE" "issues" "tests" "run.sh")))) (webpaste :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/webpaste.html" :description "Paste to pastebin-like services" :recipe (:package "webpaste" :repo ("https://github.com/etu/webpaste.el" . "webpaste") :files ("*" (:exclude ".git" "LICENSE")))) (wfnames :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/wfnames.html" :description "Edit filenames" :recipe (:package "wfnames" :repo ("https://github.com/thierryvolpiatto/wfnames" . "wfnames") :files ("*" (:exclude ".git")))) (wgrep :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/wgrep.html" :description "Writable grep buffer and apply the changes to files" :recipe (:package "wgrep" :repo ("https://github.com/mhayashi1120/Emacs-wgrep" . "wgrep") :files ("*" (:exclude ".git" "COPYING")))) (why-this :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/why-this.html" :description "Why is this line here? Ask version control" :recipe (:package "why-this" :repo ("https://codeberg.org/akib/emacs-why-this" . "why-this") :files ("*" (:exclude ".git")))) (with-editor :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/with-editor.html" :description "Use the Emacsclient as $EDITOR" :recipe (:package "with-editor" :repo ("https://github.com/magit/with-editor" . "with-editor") :files ("*" (:exclude ".git" "LICENSE" "htmlxref.cnf" ".travis.yml" ".mailmap" "Makefile")))) (with-simulated-input :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/with-simulated-input.html" :description "A macro to simulate user input non-interactively" :recipe (:package "with-simulated-input" :repo ("https://github.com/DarwinAwardWinner/with-simulated-input" . "with-simulated-input") :files ("*" (:exclude ".git")))) (workroom :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/workroom.html" :description "Named rooms for work without irrelevant distracting buffers" :recipe (:package "workroom" :repo ("https://codeberg.org/akib/emacs-workroom" . "workroom") :files ("*" (:exclude ".git")))) (writegood-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/writegood-mode.html" :description "Polish up poor writing on the fly" :recipe (:package "writegood-mode" :repo ("https://github.com/bnbeckwith/writegood-mode" . "writegood-mode") :files ("*" (:exclude ".git")))) (ws-butler :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/ws-butler.html" :description "Unobtrusively remove trailing whitespace" :recipe (:package "ws-butler" :repo ("https://github.com/emacsmirror/nongnu_elpa" . "ws-butler") :branch "elpa/ws-butler" :files ("*" (:exclude ".git" "COPYING" "tests" "Makefile" ".travis.yml")))) (xah-fly-keys :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/xah-fly-keys.html" :description "ergonomic modal keybinding minor mode." :recipe (:package "xah-fly-keys" :repo ("https://github.com/xahlee/xah-fly-keys" . "xah-fly-keys") :files ("*" (:exclude ".git" "*.png")))) (xkcd :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/xkcd.html" :description "View xkcd from Emacs" :recipe (:package "xkcd" :repo ("https://github.com/vibhavp/emacs-xkcd" . "xkcd") :files ("*" (:exclude ".git" "LICENSE" ".travis.yml" "images")))) (xml-rpc :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/xml-rpc.html" :description "An elisp implementation of clientside XML-RPC" :recipe (:package "xml-rpc" :repo ("https://github.com/xml-rpc-el/xml-rpc-el.git" . "xml-rpc") :files ("*" (:exclude ".git")))) (yaml-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/yaml-mode.html" :description "Major mode for editing YAML files" :recipe (:package "yaml-mode" :repo ("https://github.com/yoshiki/yaml-mode" . "yaml-mode") :files ("*" (:exclude ".git" "LICENSE.txt" "test-files" "Makefile")))) (yasnippet-snippets :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/yasnippet-snippets.html" :description "Collection of yasnippet snippets" :recipe (:package "yasnippet-snippets" :repo ("https://github.com/AndreaCrotti/yasnippet-snippets" . "yasnippet-snippets") :files ("*" (:exclude ".git" "LICENSE" "report" "snippets.html")))) (zenburn-theme :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/zenburn-theme.html" :description "A low contrast color theme for Emacs." :recipe (:package "zenburn-theme" :repo ("https://github.com/bbatsov/zenburn-emacs" . "zenburn-theme") :files ("*" (:exclude ".git" "LICENSE" "screenshots")))) (zig-mode :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/zig-mode.html" :description "A major mode for the Zig programming language" :recipe (:package "zig-mode" :repo ("https://github.com/ziglang/zig-mode" . "zig-mode") :files ("*" (:exclude ".git" "LICENSE" "appveyor.yml" "run_tests.sh" "tests.el")))))